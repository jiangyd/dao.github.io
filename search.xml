<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[搭建postfix邮件服务器]]></title>
    <url>%2F2018%2F05%2F29%2F%E6%90%AD%E5%BB%BApostfix%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[设置主机名为test.cn 1$ sudo vim /etc/hostname 查看主机名设置是否生效 12$ hostnametest.cn 更新及安装 12$ sudo apt-get update$ sudo apt-get install postfix 安装完成后监听端口 1234$ netstat -lntp|grep 25(No info could be read for &quot;-p&quot;: geteuid()=1000 but you should be root.)tcp 0 0 0.0.0.0:25 0.0.0.0:* LISTEN -tcp6 0 0 :::25 :::* LISTEN - 安装mail测试下 12$ sudo apt-get install mailutils$ echo &quot;this is a test email&quot; |mail &quot;962584902@qq.com&quot; 看看日志是否正常 1234567$ tailf /var/log/mail.logMay 29 14:14:32 test postfix/pickup[2416]: E275A601B5: uid=1000 from=&lt;jiangyd@test.cn&gt;May 29 14:14:32 test postfix/cleanup[2938]: E275A601B5: message-id=&lt;20180529061432.E275A601B5@test.cn&gt;May 29 14:14:32 test postfix/qmgr[2417]: E275A601B5: from=&lt;jiangyd@test.cn&gt;, size=320, nrcpt=1 (queue active)May 29 14:14:33 test postfix/smtp[2940]: connect to mx3.qq.com[240e:ff:f040:28::f]:25: Network is unreachableMay 29 14:14:34 test postfix/smtp[2940]: E275A601B5: to=&lt;962584902@qq.com&gt;, relay=mx3.qq.com[183.57.48.35]:25, delay=1.4, delays=0.02/0.01/0.17/1.2, dsn=2.0.0, status=sent (250 Ok: queued as )May 29 14:14:34 test postfix/qmgr[2417]: E275A601B5: removed 去qq邮箱看看 试试其它机器，连接邮件服务器来发邮件，并用python实现 其它机器要能访问test.cn这个地址，可以本地绑定host python脚本 12345678910111213141516171819# coding=utf-8__author__ = &apos;jyd&apos;import smtplibfrom email.mime.text import MIMETextsmtpserver = &quot;test.cn&quot;username = &quot;jiangyd@test.cn&quot;msg = MIMEText(&quot;你好，这是一封测试邮件&quot;)msg[&apos;subject&apos;] = &quot;测试邮件&quot;msg[&apos;From&apos;] = &quot;jiangyd@test.cn&quot;msg[&apos;To&apos;] = &quot;962584902@qq.com&quot;smtp = smtplib.SMTP()smtp.connect(smtpserver)smtp.sendmail(msg[&apos;From&apos;], msg[&apos;To&apos;], msg.as_string())smtp.quit() 运行以上脚本报错了 12 raise SMTPRecipientsRefused(senderrs)smtplib.SMTPRecipientsRefused: &#123;&apos;962584902@qq.com&apos;: (454, b&apos;4.7.1 &lt;962584902@qq.com&gt;: Relay access denied&apos;)&#125; 看看日志，发现是访问被拒绝了,不允许这个192.168.56.112345$ tailf /var/log/mail.logMay 29 14:26:33 test postfix/smtpd[3171]: connect from unknown[192.168.56.1]May 29 14:26:33 test postfix/smtpd[3171]: NOQUEUE: reject: RCPT from unknown[192.168.56.1]: 454 4.7.1 &lt;962584902@qq.com&gt;: Relay access denied; from=&lt;jiangyd@test.cn&gt; to=&lt;962584902@qq.com&gt; proto=ESMTP helo=&lt;jiangyd.local&gt;May 29 14:26:33 test postfix/smtpd[3171]: lost connection after RSET from unknown[192.168.56.1]May 29 14:26:33 test postfix/smtpd[3171]: disconnect from unknown[192.168.56.1] 更改设置 增加可信客户端网段192.168.56.0/24,也可是增加万能的0.0.0.0/0 12$ sudo vim /etc/postfix/main.cfmynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 192.168.56.0/24 更改后需要重启1234$ sudo /etc/init.d/postfix restartsudo: unable to resolve host test.cn * Stopping Postfix Mail Transport Agent postfix [ OK ] * Starting Postfix Mail Transport Agent postfix [ OK ] 再次验证]]></content>
      <tags>
        <tag>postfix</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql创建数据库,用户,及授权]]></title>
    <url>%2F2018%2F05%2F28%2Fmysql%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93-%E7%94%A8%E6%88%B7-%E5%8F%8A%E6%8E%88%E6%9D%83%2F</url>
    <content type="text"><![CDATA[创建数据库,注意数据库加上反撇号,不然有些带横杠的会被认为是减号，如test-de会创建不成功 12mysql&gt; create database `testdb` default character set utf8 default collate utf8_general_ci;Query OK, 1 row affected (0.00 sec) 创建用户 12mysql&gt; create user &apos;jyd&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;Query OK, 0 rows affected (0.04 sec) 给用户授权 12mysql&gt; GRANT ALL PRIVILEGES ON testdb.* to &apos;jyd&apos;@&apos;%&apos;;Query OK, 0 rows affected, 1 warning (0.00 sec) 给某数据库设置只读权限（message_bb） 12mysql&gt; GRANT SELECT ON message_bb.* to &apos;jyd&apos;@&apos;%&apos;;Query OK, 0 rows affected (0.00 sec) 刷新权限 12mysql&gt; flush privileges;Query OK, 0 rows affected (0.00 sec) 更改用户密码 12mysql&gt; SET PASSWORD FOR &apos;jyd&apos;@&apos;%&apos; = PASSWORD(&apos;new123456&apos;);Query OK, 0 rows affected, 1 warning (0.00 sec)]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次selenium 一打开浏览器就自动关闭了的问题]]></title>
    <url>%2F2018%2F05%2F23%2F%E8%AE%B0%E4%B8%80%E6%AC%A1selenium-%E4%B8%80%E6%89%93%E5%BC%80%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B0%B1%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD%E4%BA%86%E7%9A%84%E9%97%AE%E9%A2%98-Only-local-connections-are-allowed%2F</url>
    <content type="text"><![CDATA[selenium无法打开浏览器运行 1.chromedriver 版本与浏览器不匹配2.如果是在本地调用， localhost需要指向127.0.0.1这个IP，不然也跑不起来(其实只是要host能指向正确的selenium driver的地址就行) https://npm.taobao.org/mirrors/chromedriver https://npm.taobao.org/mirrors/selenium]]></content>
      <tags>
        <tag>selenium</tag>
        <tag>chromedriver</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[设置mysql最大连接数]]></title>
    <url>%2F2018%2F05%2F21%2F%E8%AE%BE%E7%BD%AEmysql%E6%9C%80%E5%A4%A7%E8%BF%9E%E6%8E%A5%E6%95%B0%2F</url>
    <content type="text"><![CDATA[为什么要修改连接数，是因为默认的连接不满足需求，在硬件条件允许下，修改最大连接数达到满足需求的目的 查看当前mysql最大连接数 1234567mysql&gt; show variables like &apos;max_connections&apos;;+-----------------+-------+| Variable_name | Value |+-----------------+-------+| max_connections | 1000 |+-----------------+-------+1 row in set (0.31 sec) 修改当前mysql最大连接数 1mysql&gt; set global max_connections=1000; 但是以上的修改方式，在mysql服务重启后会失效 查看当前mysql连接 123456789101112131415161718192021222324252627mysql&gt; SHOW PROCESSLIST;+-----+------+------------------+------+---------+------+----------+------------------+| Id | User | Host | db | Command | Time | State | Info |+-----+------+------------------+------+---------+------+----------+------------------+| 66 | root | localhost | NULL | Query | 0 | starting | SHOW PROCESSLIST || 331 | root | 172.17.0.1:54084 | csos | Sleep | 9 | | NULL || 332 | root | 172.17.0.1:54086 | csos | Sleep | 8 | | NULL || 333 | root | 172.17.0.1:54090 | csos | Sleep | 9 | | NULL || 334 | root | 172.17.0.1:54098 | csos | Sleep | 9 | | NULL || 335 | root | 172.17.0.1:54096 | csos | Sleep | 9 | | NULL || 336 | root | 172.17.0.1:54092 | csos | Sleep | 8 | | NULL || 337 | root | 172.17.0.1:54088 | csos | Sleep | 9 | | NULL || 338 | root | 172.17.0.1:54094 | csos | Sleep | 9 | | NULL || 339 | root | 172.17.0.1:54100 | csos | Sleep | 9 | | NULL || 340 | root | 172.17.0.1:54116 | csos | Sleep | 8 | | NULL || 341 | root | 172.17.0.1:54104 | csos | Sleep | 8 | | NULL || 342 | root | 172.17.0.1:54120 | csos | Sleep | 9 | | NULL || 343 | root | 172.17.0.1:54106 | csos | Sleep | 9 | | NULL || 344 | root | 172.17.0.1:54122 | csos | Sleep | 8 | | NULL || 345 | root | 172.17.0.1:54108 | csos | Sleep | 8 | | NULL || 346 | root | 172.17.0.1:54110 | csos | Sleep | 8 | | NULL || 347 | root | 172.17.0.1:54112 | csos | Sleep | 9 | | NULL || 348 | root | 172.17.0.1:54102 | csos | Sleep | 8 | | NULL || 349 | root | 172.17.0.1:54114 | csos | Sleep | 8 | | NULL || 350 | root | 172.17.0.1:54118 | csos | Sleep | 8 | | NULL |+-----+------+------------------+------+---------+------+----------+------------------+21 rows in set (0.00 sec) 如果查看连接数需要过滤的话，可以如下操作 12345678mysql&gt; select * from information_schema.PROCESSLIST where db=&apos;csos&apos;;+-----+------+------------------+------+---------+------+-------+------+| ID | USER | HOST | DB | COMMAND | TIME | STATE | INFO |+-----+------+------------------+------+---------+------+-------+------+| 354 | root | 172.17.0.1:54130 | csos | Sleep | 4 | | NULL || 355 | root | 172.17.0.1:54132 | csos | Sleep | 4 | | NULL |+-----+------+------------------+------+---------+------+-------+------+2 rows in set (0.00 sec)]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[时间不对，通过ntpdate同步时间]]></title>
    <url>%2F2018%2F05%2F21%2F%E6%97%B6%E9%97%B4%E4%B8%8D%E5%AF%B9%EF%BC%8C%E9%80%9A%E8%BF%87ntpdate%E5%90%8C%E6%AD%A5%E6%97%B6%E9%97%B4%2F</url>
    <content type="text"><![CDATA[我有一台虚拟机，时间不对，影响我使用,使用阿里云公网NTP服务同步时间 12# ntpdate ntp1.aliyun.com21 May 12:50:42 ntpdate[6794]: step time server 182.92.12.11 offset 0.548418 sec 其它阿里云公网NTP时间服务器 公网NTP ntp2.aliyun.comntp3.aliyun.comntp4.aliyun.comntp5.aliyun.comntp6.aliyun.comntp7.aliyun.com]]></content>
      <tags>
        <tag>时间同步</tag>
        <tag>ntpdate</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[通过ssh config配置, 使git用不同私钥提交代码]]></title>
    <url>%2F2018%2F05%2F15%2F%E9%80%9A%E8%BF%87ssh-config%E9%85%8D%E7%BD%AE-%E4%BD%BFgit%E7%94%A8%E4%B8%8D%E5%90%8C%E7%A7%81%E9%92%A5%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[我有在用hexo部署blog在github上，本地构建完成后，直接可以把编译后的文件部署上去 但是，我希望源文件也可以存放在github上，所以我又搞了一个仓库地址 但是在当前目录提交代码时，只能提交一个，另一个提交不了，因为默认使用的私钥文件不对 为了区分开来，我只能配置不同的私钥文件,可以参考下我的配置文件 123456789101112131415$ touch ~/.ssh/config$ vim ~/.ssh/configHOST server1 HOSTNAME 192.168.56.102 User jiangyd Port 3333HOST gitblog.com HOSTNAME github.com IdentityFile ~/.ssh/id_rsaHOST github.com HOSTNAME github.com IdentityFile ~/.ssh/github.com 参数 说明 HOST 别名 HOSTNAME 主机 User 用户名 Port 端口 IdentityFile 私钥文件 连接例子 12$ ssh server1jiangyd@192.168.56.102&apos;s password: 我的hexo _config.yml github仓库配置，注意这里用别名 1234deploy: type: git repo: git@gitblog.com:jiangyd/jiangyd.github.io branch: master 这样我就可以在hexo blog项目里面，即可以提交源代码到Github，又可以提交构建部署的代码到Github因为部署的github与源代码仓库地址不是一个 以上的配置都是太过复杂，为什么会出现这种情况，是因为我把自已电脑的公钥存放到Github项目里面了，而不同项目又不能存放同一个公钥，所以才会有我上面的这些设置 那么只要把公钥在Github上面做全局的设置，那么我本地就不用搞这么复杂了]]></content>
      <tags>
        <tag>ssh</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[容器与宿主机时区不一致问题]]></title>
    <url>%2F2018%2F05%2F09%2F%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E5%8C%BA%E4%B8%8D%E4%B8%80%E8%87%B4%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[docker 容器时区与宿主机时区保持一致 方法1 共享宿主机的local time 1docker run -it -v /etc/localtime:/etc/localtime -v /etc/timezone:/etc/timezone ubuntu:16.04 /bin/bash 方法2 在dockerfile中定义 1234567RUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \ &amp;&amp; echo &apos;Asia/Shanghai&apos; &gt;/etc/timezone \或者RUN /bin/cp /etc/localtime /etc/localtime \ &amp;&amp; echo &apos;Asia/Shanghai&apos; &gt;/etc/timezone \]]></content>
      <tags>
        <tag>docker</tag>
        <tag>挂载</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu apt使用阿里源]]></title>
    <url>%2F2018%2F05%2F09%2Fubuntu-apt%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E6%BA%90%2F</url>
    <content type="text"><![CDATA[ubuntu 14.04使用阿里的软件源 备份 1# cp /etc/apt/sources.list /etc/apt/sources.list.bak 替换 12345678910111213141516cat &gt;/etc/apt/sources.list&lt;&lt;EOFdeb https://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiversedeb-src https://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiversedeb https://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiversedeb-src https://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiversedeb https://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiversedeb-src https://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiversedeb https://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiversedeb-src https://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse## Not recommended# deb https://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse# deb-src https://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverseEOF 最后执行apt更新 1# apt-get update 其它系统参考此地址 https://opsx.alibaba.com/mirror]]></content>
      <tags>
        <tag>apt</tag>
        <tag>apt-get</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux下使用sed替换dns地址]]></title>
    <url>%2F2018%2F05%2F09%2FLinux%E4%B8%8B%E4%BD%BF%E7%94%A8sed%E6%9B%BF%E6%8D%A2dns%E5%9C%B0%E5%9D%80%2F</url>
    <content type="text"><![CDATA[sed替换/etc/resolv.conf文件的dns地址123456789# cat /etc/resolv.confnameserver 114.114.114.114nameserver 8.8.8.8# sed -i &apos;s/[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;/172.16.0.244/g&apos; /etc/resolv.conf# cat /etc/resolv.confnameserver 172.16.0.244nameserver 172.16.0.244]]></content>
      <tags>
        <tag>－ sed</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu使用bind9搭建DNS]]></title>
    <url>%2F2018%2F05%2F07%2Fubuntu%E4%BD%BF%E7%94%A8bind9%E6%90%AD%E5%BB%BADNS%2F</url>
    <content type="text"><![CDATA[安装bind912$ sudo apt-get update$ sudo apt-get install bind9 默认配置文件路径12$ pwd/etc/bind 添加域名正反向解析配置1234567891011121314151617$ sudo vim named.conf.default-zoneszone &quot;jiangyd.cn&quot; &#123; type master; file &quot;/etc/bind/db.jiangyd.cn&quot;;&#125;;zone &quot;56.168.192.in-addr.arpa&quot; &#123; type master; file &quot;/etc/bind/192.168.56.zone&quot;;&#125;;zone &quot;ipad.jiangyd.com.cn&quot; &#123; type master; file &quot;/etc/bind/ipad.jiangyd.com.cn&quot;;&#125;; 正向解析 12345678910111213141516171819# cat db.jiangyd.cn;; BIND data file for local loopback interface;$TTL 604800@ IN SOA jiangyd.cn. root.localhost. ( 2 ; Serial 604800 ; Refresh 86400 ; Retry 2419200 ; Expire 604800 ) ; Negative Cache TTL;@ IN NS jiangyd.cn.@ IN A 127.0.0.1@ IN AAAA ::1www IN A 192.168.56.102bbs IN A 192.168.56.102music IN A 192.168.56.1 反向解析 12345678910111213141516# cat 192.168.56.zone;; BIND reverse data file for local loopback interface;$TTL 604800@ IN SOA jiangyd.cn. root.localhost. ( 1 ; Serial 604800 ; Refresh 86400 ; Retry 2419200 ; Expire 604800 ) ; Negative Cache TTL;@ IN NS jiangyd.cn.102 IN PTR www.jiangyd.cn.102 IN PTR bbs.jiangyd.cn.1 IN PTR music.jiangyd.cn. 有的应用需要为不同用户分配不同域名，试试泛解析 1234567891011121314151617181920# cat ipad.jiangyd.com.cn;; BIND data file for local loopback interface;$TTL 604800@ IN SOA ipad.jiangyd.com.cn. root.localhost. ( 2 ; Serial 604800 ; Refresh 86400 ; Retry 2419200 ; Expire 604800 ) ; Negative Cache TTL;@ IN NS ipad.jiangyd.com.cn.@ IN A 127.0.0.1@ IN AAAA ::1www IN A 192.168.56.1bbs IN A 192.168.56.102* IN A 192.168.56.1 正反向解析测试 12345678910111213141516171819202122232425262728293031root@jiangydpc:/etc/bind# ping www.jiangyd.cnPING www.jiangyd.cn (192.168.56.102) 56(84) bytes of data.64 bytes from dns.jiangyd.cn (192.168.56.102): icmp_seq=1 ttl=64 time=0.069 ms64 bytes from dns.jiangyd.cn (192.168.56.102): icmp_seq=2 ttl=64 time=0.026 ms^C--- www.jiangyd.cn ping statistics ---2 packets transmitted, 2 received, 0% packet loss, time 999msrtt min/avg/max/mdev = 0.026/0.047/0.069/0.022 msroot@jiangydpc:/etc/bind# ping bbs.jiangyd.cnPING bbs.jiangyd.cn (192.168.56.102) 56(84) bytes of data.64 bytes from www.jiangyd.cn (192.168.56.102): icmp_seq=1 ttl=64 time=0.010 ms64 bytes from www.jiangyd.cn (192.168.56.102): icmp_seq=2 ttl=64 time=0.023 ms^C--- bbs.jiangyd.cn ping statistics ---2 packets transmitted, 2 received, 0% packet loss, time 999msrtt min/avg/max/mdev = 0.010/0.016/0.023/0.007 msroot@jiangydpc:/etc/bind# ping music.jiangyd.cnPING music.jiangyd.cn (192.168.56.1) 56(84) bytes of data.64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=1 ttl=64 time=0.277 ms64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=2 ttl=64 time=0.355 ms64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=3 ttl=64 time=0.203 ms^C--- music.jiangyd.cn ping statistics ---3 packets transmitted, 3 received, 0% packet loss, time 1999msrtt min/avg/max/mdev = 0.203/0.278/0.355/0.063 msroot@jiangydpc:/etc/bind# host -t PTR 192.168.56.11.56.168.192.in-addr.arpa domain name pointer music.jiangyd.cn.root@jiangydpc:/etc/bind# host -t PTR 192.168.56.102102.56.168.192.in-addr.arpa domain name pointer dns.jiangyd.cn.102.56.168.192.in-addr.arpa domain name pointer www.jiangyd.cn.102.56.168.192.in-addr.arpa domain name pointer bbs.jiangyd.cn. 泛解析,前面域名可以随便填写了 123456789101112131415161718192021222324252627282930313233root@jiangydpc:/etc/bind# ping wqewweq.ipad.jiangyd.com.cnPING wqewweq.ipad.jiangyd.com.cn (192.168.56.1) 56(84) bytes of data.64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=1 ttl=64 time=0.295 ms64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=2 ttl=64 time=0.358 ms64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=3 ttl=64 time=0.246 ms^C--- wqewweq.ipad.jiangyd.com.cn ping statistics ---3 packets transmitted, 3 received, 0% packet loss, time 2000msrtt min/avg/max/mdev = 0.246/0.299/0.358/0.050 msroot@jiangydpc:/etc/bind# ping www.ipad.jiangyd.com.cnPING www.ipad.jiangyd.com.cn (192.168.56.1) 56(84) bytes of data.64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=1 ttl=64 time=0.194 ms64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=2 ttl=64 time=0.289 ms^C--- www.ipad.jiangyd.com.cn ping statistics ---2 packets transmitted, 2 received, 0% packet loss, time 1002msrtt min/avg/max/mdev = 0.194/0.241/0.289/0.049 msroot@jiangydpc:/etc/bind# ping bbs.ipad.jiangyd.com.cnPING bbs.ipad.jiangyd.com.cn (192.168.56.102) 56(84) bytes of data.64 bytes from bbs.jiangyd.cn (192.168.56.102): icmp_seq=1 ttl=64 time=0.019 ms64 bytes from bbs.jiangyd.cn (192.168.56.102): icmp_seq=2 ttl=64 time=0.030 ms^C--- bbs.ipad.jiangyd.com.cn ping statistics ---2 packets transmitted, 2 received, 0% packet loss, time 1001msrtt min/avg/max/mdev = 0.019/0.024/0.030/0.007 msroot@jiangydpc:/etc/bind# ping 56789.ipad.jiangyd.com.cnPING 56789.ipad.jiangyd.com.cn (192.168.56.1) 56(84) bytes of data.64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=1 ttl=64 time=0.343 ms64 bytes from music.jiangyd.cn (192.168.56.1): icmp_seq=2 ttl=64 time=0.306 ms^C--- 56789.ipad.jiangyd.com.cn ping statistics ---2 packets transmitted, 2 received, 0% packet loss, time 999msrtt min/avg/max/mdev = 0.306/0.324/0.343/0.025 ms 查看日志我的系统是ubuntu 14.04 1tailf /var/log/syslog bind9 重启，停止，状态,及端口 1234567891011121314151617181920# /etc/init.d/bind9 status * bind9 is runningroot@jiangydpc:/etc/bind# /etc/init.d/bind9 stop * Stopping domain name service... bind9 waiting for pid 4039 to die [ OK ]root@jiangydpc:/etc/bind# /etc/init.d/bind9 start * Starting domain name service... bind9 [ OK ]root@jiangydpc:/etc/bind# /etc/init.d/bind9 restart * Stopping domain name service... bind9 [ OK ] * Starting domain name service... bind9 [ OK ]root@jiangydpc:/etc/bind# netstat -lntpActive Internet connections (only servers)Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program nametcp 0 0 192.168.56.102:53 0.0.0.0:* LISTEN 4133/namedtcp 0 0 10.100.3.52:53 0.0.0.0:* LISTEN 4133/namedtcp 0 0 127.0.0.1:53 0.0.0.0:* LISTEN 4133/namedtcp 0 0 127.0.0.1:953 0.0.0.0:* LISTEN 4133/namedtcp 0 0 127.0.0.1:8123 0.0.0.0:* LISTEN 1229/polipotcp 0 0 0.0.0.0:3333 0.0.0.0:* LISTEN 1092/sshdtcp6 0 0 :::53 :::* LISTEN 4133/named]]></content>
      <tags>
        <tag>dns</tag>
        <tag>bind9</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[docker cp]]></title>
    <url>%2F2018%2F05%2F06%2Fdocker-cp%2F</url>
    <content type="text"><![CDATA[docker cp 使用记录把容器里面的文件，目录拷贝到宿主机 1$docker cp 2f4f188c5d1c:/etc/nginx/conf.d/testing.www.cloudcare.cn.conf nginx_conf/ 1$docker cp 2f4f188c5d1c:/etc/nginx/conf.d/ nginx_conf/]]></content>
      <categories>
        <category>docker常用命令</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>cp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[docker logs]]></title>
    <url>%2F2018%2F05%2F06%2Fdocker-logs%2F</url>
    <content type="text"><![CDATA[docker logs 使用记录最近常用到容器的这个命令 12345678910111213$ docker logs --helpUsage: docker logs [OPTIONS] CONTAINERFetch the logs of a containerOptions: --details Show extra details provided to logs -f, --follow Follow log output --help Print usage --since string Show logs since timestamp --tail string Number of lines to show from the end of the logs (default &quot;all&quot;) -t, --timestamps Show timestamps 实时查看日志1$ docker logs -f a13d7f1818d6 查看日志产生的时间 12$ docker logs -t a13d7f1818d62018-05-06T08:53:26.689471000Z INFO:callme.server:Server with id=&apos;cloudcare&apos; started. 查看最后多少条日志 1docker logs -f --tail=10 a13d7f1818d6]]></content>
      <categories>
        <category>docker常用命令</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
</search>
